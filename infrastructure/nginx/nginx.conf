# NGINX API Gateway Configuration with Rate Limiting
# 속도 제한을 사용한 NGINX API 게이트웨이 구성

# Worker process optimization
# 워커 프로세스 최적화
worker_processes auto;
worker_rlimit_nofile 65535;

# Events configuration for high performance
# 고성능을 위한 이벤트 구성
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# Rate limiting zones - Token bucket algorithm implementation
# 속도 제한 영역 - 토큰 버킷 알고리즘 구현
http {
    # Performance tuning
    # 성능 튜닝
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    send_timeout 2;
    client_body_timeout 10;
    client_header_timeout 10;
    # Rate limiting disabled for testing app capacity
    # 앱 용량 테스트를 위해 속도 제한 비활성화
    # limit_req_zone $binary_remote_addr zone=global:100m rate=100000r/s;
    # limit_req_zone $binary_remote_addr zone=perip:50m rate=100r/s;
    # limit_req_zone $http_user_id zone=peruser:50m rate=10r/s;
    # limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:50m;
    
    # Upstream backend servers (Python application servers)
    # 업스트림 백엔드 서버 (Python 애플리케이션 서버)
    upstream coupon_backend {
        least_conn;  # Load balancing method / 로드 밸런싱 방법
        
        server app1:8000 weight=1 max_fails=3 fail_timeout=30s;
        server app2:8000 weight=1 max_fails=3 fail_timeout=30s;
        server app3:8000 weight=1 max_fails=3 fail_timeout=30s;
        
        # Health check configuration / 헬스 체크 구성
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # Enable access and error logging
    # 액세스 및 오류 로깅 활성화
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
    
    # Server configuration for coupon API
    # 쿠폰 API를 위한 서버 구성
    server {
        listen 80;
        listen 443 ssl;
        http2 on;
        server_name api.coupon.example.com;
        
        # SSL configuration (production ready)
        # SSL 구성 (프로덕션 준비됨)
        ssl_certificate /etc/nginx/ssl/coupon.crt;
        ssl_certificate_key /etc/nginx/ssl/coupon.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        
        # Security headers / 보안 헤더
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        
        # Connection limits per IP (disabled for testing)
        # IP당 연결 제한 (테스팅을 위해 비활성화)
        # limit_conn conn_limit_per_ip 20;
        
        # Health check endpoint (no rate limiting)
        # 헬스 체크 엔드포인트 (속도 제한 없음)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Coupon issuance endpoint - Rate limiting disabled for testing
        # 쿠폰 발급 엔드포인트 - 테스팅을 위해 속도 제한 비활성화
        location /api/v1/coupons/issue {
            # Rate limiting disabled to test app capacity
            # 앱 용량 테스트를 위해 속도 제한 비활성화
            # limit_req zone=global burst=10000 nodelay;
            # limit_req zone=perip burst=50 nodelay;
            # limit_req zone=peruser burst=5 nodelay;
            
            # Only allow POST method / POST 메서드만 허용
            limit_except POST {
                deny all;
            }
            
            # Request size limits / 요청 크기 제한
            client_max_body_size 1k;
            
            # Timeout configuration / 타임아웃 구성
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Forward to backend with proper headers
            # 적절한 헤더로 백엔드에 전달
            proxy_pass http://coupon_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add request ID for tracking / 추적을 위한 요청 ID 추가
            proxy_set_header X-Request-ID $request_id;
        }
        
        # General API endpoints - Rate limiting disabled for testing
        # 일반 API 엔드포인트 - 테스팅을 위해 속도 제한 비활성화
        location /api/ {
            # limit_req zone=global burst=5000 nodelay;
            # limit_req zone=perip burst=100 nodelay;
            
            proxy_pass http://coupon_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
        
        # Rate limit exceeded error pages
        # 속도 제한 초과 오류 페이지
        error_page 429 = @ratelimit;
        location @ratelimit {
            add_header Content-Type application/json always;
            add_header X-Rate-Limit-Exceeded true always;
            return 429 '{"error":"rate_limit_exceeded","message":"Too many requests. Please try again later.","retry_after":60}';
        }
        
        # Service unavailable error page
        # 서비스 이용 불가 오류 페이지
        error_page 502 503 504 = @unavailable;
        location @unavailable {
            add_header Content-Type application/json always;
            return 503 '{"error":"service_unavailable","message":"Service temporarily unavailable. Please try again later."}';
        }
    }
}